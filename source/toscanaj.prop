###
### ToscanaJ properties file
###
### this file stores session managment information and some configuration options
### the session management information will appear during usage, the configuration
### options can be set according to the comments below.
###

### This sets the first file loaded
ToscanaJMainPanel-mruFiles-1=./examples/sql/pctest/pctest.csx

###
### different options for the diagram schema
###

# DiagramSchema-backgroundColor=[color of the background]
# DiagramSchema-topColor=[top color for the gradient]
# DiagramSchema-bottomColor=[bottom color for the gradient]
# DiagramSchema-foregroundColor=[used for text etc.]
# DiagramSchema-nestedDiagramNodeColor=[background color for the large ellipses]
# DiagramSchema-circleColor=[color of the normal nodes]
# DiagramSchema-lineColor=[color of the lines between the nodes]
# DiagramSchema-circleSelectionColor=[highlighting color for the selected node]
# DiagramSchema-circleIdealColor=[highlighting color for the ideal of the selected node]
# DiagramSchema-circleFilterColor=[highlighting color for the filter of the selected node]
# DiagramSchema-fadeOutValue=[a value between 1.0 (complete fade for non-highlighted parts) and 0.0 (no fade at all)]
# DiagramSchema-margin=[the margin around the diagram]
# DiagramSchema-notRealizedNodeSizeReductionFactor=[the relation of the size non-realised nodes to the normal size (0.0-1.0)]
# DiagramSchema-gradientType=[either "extent" or "contingent" (whithout the quotes), gives the type of the gradient]
### the next one is probably broken at the moment, "schema" might not work at all and might be dropped later
# DiagramSchema-gradientReference=[either "diagram" or "schema" (without the quotes), gives the reference for the gradient color]
# DiagramSchema-selectionLineWidth=[the line width used when highlighting]
# DiagramSchema-labelFontName=[a font family used for the label text (any form on the platform should work)]
# DiagramSchema-labelFontSize=[the size of the label text]
# DiagramSchema-notRealisedDiagramNodeColor=[the color used for nodes of not realised concepts, if not given, the normal color is used]
# DiagramSchema-scaleNodeSize=["contingent", "extent" or "none" -- turns the scaling of node sizes on/off.]


###
### other options
###

# ToscanaJMainPanel-offerGradientOptions=[if set to "1", the gradient type can be changed by the user]
# ToscanaJMainPanel-offerNodeSizeScalingOptions=[if set to "1", the node size scaling can be changed by the user]
# NodeView-displayVectors=[if set to "1", the vectors for the nodes will be shown (debug option)]
# DatabaseConnection-logger=[if set all database calls will be logged, either to the given file or to stdout if "-" is used]
# SienaTemporalControls-enabled=[if set to "1", Siena will offer controls for Temporal Concept Analysis]
# LineView-showExtentRatioLabels=[if set to "1", the ratio of the extents of the upper and lower concept is shown on the lines]
# LineView-labelFormat=[if set to a format accepted by DecimalFormat the format used to display labels on the lines, defaults to "0.## %"]
# LineView-showExtentRatioColor=[the color as background on the line labels, defaults to #ccffcc]
# LineView-showExtentRatioFillColor=[the color used to get a filling into the label background, indicating the ratio, defaults to #ffcccc]
# LineView-labelFontSize=[if lines have labels, this is the font size in points. Defaults to 6pt]
# LineView-lineWidth=[if set to "extentRatio", the line width will vary with the extent size differences]
# LineView-nonRealizedConceptGrouping=[if set to "coloredLines", all non-realized nodes will be connected to the realized one with the same extent
#                                      if set to "clouds" there will be clouds around all lines connecting such equivalence class]
